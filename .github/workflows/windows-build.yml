name: Windows portable build

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "apps/**"
      - "shared/**"
      - "paperrepo/**"
      - "packaging/**"
      - "vendor/**"
      - "requirements.txt"
      - ".github/workflows/windows-build.yml"

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (1) Tải Tectonic cho Windows và copy vào vendor/tectonic/windows-x86_64/tectonic.exe
      - name: Download Tectonic (Windows)
        run: |
          $ErrorActionPreference = 'Stop'
          $ver   = '0.15.0'
          $url   = "https://github.com/tectonic-typesetting/tectonic/releases/download/tectonic%40$ver/tectonic-$ver-x86_64-pc-windows-msvc.zip"
          $zip   = Join-Path $env:RUNNER_TEMP "tectonic.zip"
          Invoke-WebRequest -Uri $url -OutFile $zip

          $dest  = Join-Path $env:RUNNER_TEMP "tectonic"
          if (Test-Path $dest) { Remove-Item -Recurse -Force $dest }
          Expand-Archive -Path $zip -DestinationPath $dest

          # TÌM FILE, không phải folder
          $exe = Get-ChildItem -Path $dest -Filter 'tectonic.exe' -File -Recurse | Select-Object -First 1
          if (-not $exe) { throw "tectonic.exe not found under $dest" }

          New-Item -ItemType Directory -Force -Path "vendor\tectonic\windows-x86_64" | Out-Null
          Copy-Item $exe.FullName "vendor\tectonic\windows-x86_64\tectonic.exe" -Force

      - name: Show tectonic in repo
        run: |
          Get-ChildItem -Recurse vendor\tectonic | Select FullName,Length

      # (2) Python & deps
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'   # PyInstaller trên Windows ổn định nhất với 3.10/3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # (3) Build portable EXE (không cần Inno Setup)
      - name: Build Student (portable)
        run: |
          pyinstaller -y packaging\win_student.spec
      - name: Build Supervisor (portable)
        run: |
          pyinstaller -y packaging\win_supervisor.spec

      # (4) Liệt kê dist/ để debug nếu có sự cố
      - name: List dist/
        if: always()
        run: |
          Write-Host "== dist tree =="
          if (Test-Path dist) {
            Get-ChildItem -Recurse dist | Select FullName,Length
          } else {
            Write-Host "dist/ does not exist"
          }

      # (5) Đóng gói thành artifact
      - name: Zip portable outputs
        run: |
          $ErrorActionPreference = 'Stop'
          New-Item -ItemType Directory -Force -Path out | Out-Null

          # Tuỳ theo .spec bạn đặt name= gì; dưới đây giả định tạo ra các thư mục dist\Paperforge-Student và dist\Paperforge-Supervisor
          if (Test-Path "dist\Paperforge-Student")    { Compress-Archive -Path "dist\Paperforge-Student\*"    -DestinationPath "out\Paperforge-Student-portable.zip" }
          if (Test-Path "dist\Paperforge-Supervisor") { Compress-Archive -Path "dist\Paperforge-Supervisor\*" -DestinationPath "out\Paperforge-Supervisor-portable.zip" }

      - name: Upload portable artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-portable
          path: out\*.zip
          if-no-files-found: error

      # đọc version từ shared/version.py
      - name: Read app version
        id: ver
        shell: pwsh
        run: |
          $v = python -c "from shared.version import APP_VERSION; print(APP_VERSION)"
          echo "version=$v" >> $env:GITHUB_OUTPUT


      # tạo GitHub Release & upload assets
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.ver.outputs.version }}
          name: Paperforge v${{ steps.ver.outputs.version }}
          draft: false
          prerelease: false
          files: |
            dist/Paperforge-Supervisor-Portable-win64.zip
            dist/Paperforge-Student-Portable-win64.zip
